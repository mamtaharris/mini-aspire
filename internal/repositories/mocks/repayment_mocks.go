// Code generated by MockGen. DO NOT EDIT.
// Source: repayment.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/mamtaharris/mini-aspire/internal/models/entities"
)

// MockRepaymentRepo is a mock of RepaymentRepo interface.
type MockRepaymentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepaymentRepoMockRecorder
}

// MockRepaymentRepoMockRecorder is the mock recorder for MockRepaymentRepo.
type MockRepaymentRepoMockRecorder struct {
	mock *MockRepaymentRepo
}

// NewMockRepaymentRepo creates a new mock instance.
func NewMockRepaymentRepo(ctrl *gomock.Controller) *MockRepaymentRepo {
	mock := &MockRepaymentRepo{ctrl: ctrl}
	mock.recorder = &MockRepaymentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepaymentRepo) EXPECT() *MockRepaymentRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRepaymentRepo) Create(ctx context.Context, repayment entities.Repayments) (entities.Repayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, repayment)
	ret0, _ := ret[0].(entities.Repayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockRepaymentRepoMockRecorder) Create(ctx, repayment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRepaymentRepo)(nil).Create), ctx, repayment)
}

// GetAllRepaymentsForLoanID mocks base method.
func (m *MockRepaymentRepo) GetAllRepaymentsForLoanID(ctx context.Context, loanID int) ([]entities.Repayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllRepaymentsForLoanID", ctx, loanID)
	ret0, _ := ret[0].([]entities.Repayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllRepaymentsForLoanID indicates an expected call of GetAllRepaymentsForLoanID.
func (mr *MockRepaymentRepoMockRecorder) GetAllRepaymentsForLoanID(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRepaymentsForLoanID", reflect.TypeOf((*MockRepaymentRepo)(nil).GetAllRepaymentsForLoanID), ctx, loanID)
}

// GetByID mocks base method.
func (m *MockRepaymentRepo) GetByID(ctx context.Context, repaymentID int) (entities.Repayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, repaymentID)
	ret0, _ := ret[0].(entities.Repayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockRepaymentRepoMockRecorder) GetByID(ctx, repaymentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockRepaymentRepo)(nil).GetByID), ctx, repaymentID)
}

// Update mocks base method.
func (m *MockRepaymentRepo) Update(ctx context.Context, repayment entities.Repayments) (entities.Repayments, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, repayment)
	ret0, _ := ret[0].(entities.Repayments)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockRepaymentRepoMockRecorder) Update(ctx, repayment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRepaymentRepo)(nil).Update), ctx, repayment)
}
