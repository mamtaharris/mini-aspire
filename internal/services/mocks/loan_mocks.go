// Code generated by MockGen. DO NOT EDIT.
// Source: loan.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	requests "github.com/mamtaharris/mini-aspire/internal/models/requests"
	responses "github.com/mamtaharris/mini-aspire/internal/models/responses"
)

// MockLoanService is a mock of LoanService interface.
type MockLoanService struct {
	ctrl     *gomock.Controller
	recorder *MockLoanServiceMockRecorder
}

// MockLoanServiceMockRecorder is the mock recorder for MockLoanService.
type MockLoanServiceMockRecorder struct {
	mock *MockLoanService
}

// NewMockLoanService creates a new mock instance.
func NewMockLoanService(ctrl *gomock.Controller) *MockLoanService {
	mock := &MockLoanService{ctrl: ctrl}
	mock.recorder = &MockLoanServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanService) EXPECT() *MockLoanServiceMockRecorder {
	return m.recorder
}

// CreateLoan mocks base method.
func (m *MockLoanService) CreateLoan(ctx context.Context, req requests.CreateLoanReq) (responses.LoanResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoan", ctx, req)
	ret0, _ := ret[0].(responses.LoanResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLoan indicates an expected call of CreateLoan.
func (mr *MockLoanServiceMockRecorder) CreateLoan(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoan", reflect.TypeOf((*MockLoanService)(nil).CreateLoan), ctx, req)
}

// GetLoan mocks base method.
func (m *MockLoanService) GetLoan(ctx context.Context, loanID int) (responses.LoanResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoan", ctx, loanID)
	ret0, _ := ret[0].(responses.LoanResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoan indicates an expected call of GetLoan.
func (mr *MockLoanServiceMockRecorder) GetLoan(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoan", reflect.TypeOf((*MockLoanService)(nil).GetLoan), ctx, loanID)
}

// RepayLoan mocks base method.
func (m *MockLoanService) RepayLoan(ctx context.Context, req requests.RepayLoanReq, loanID, repaymentID int) (responses.LoanResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RepayLoan", ctx, req, loanID, repaymentID)
	ret0, _ := ret[0].(responses.LoanResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RepayLoan indicates an expected call of RepayLoan.
func (mr *MockLoanServiceMockRecorder) RepayLoan(ctx, req, loanID, repaymentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepayLoan", reflect.TypeOf((*MockLoanService)(nil).RepayLoan), ctx, req, loanID, repaymentID)
}

// UpdateLoan mocks base method.
func (m *MockLoanService) UpdateLoan(ctx context.Context, req requests.UpdateLoanReq, loanID int) (responses.LoanResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoan", ctx, req, loanID)
	ret0, _ := ret[0].(responses.LoanResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateLoan indicates an expected call of UpdateLoan.
func (mr *MockLoanServiceMockRecorder) UpdateLoan(ctx, req, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoan", reflect.TypeOf((*MockLoanService)(nil).UpdateLoan), ctx, req, loanID)
}
