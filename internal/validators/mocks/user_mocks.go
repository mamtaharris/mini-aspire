// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	requests "github.com/mamtaharris/mini-aspire/internal/models/requests"
)

// MockUserReqValidatorInterface is a mock of UserReqValidatorInterface interface.
type MockUserReqValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserReqValidatorInterfaceMockRecorder
}

// MockUserReqValidatorInterfaceMockRecorder is the mock recorder for MockUserReqValidatorInterface.
type MockUserReqValidatorInterfaceMockRecorder struct {
	mock *MockUserReqValidatorInterface
}

// NewMockUserReqValidatorInterface creates a new mock instance.
func NewMockUserReqValidatorInterface(ctrl *gomock.Controller) *MockUserReqValidatorInterface {
	mock := &MockUserReqValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockUserReqValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserReqValidatorInterface) EXPECT() *MockUserReqValidatorInterfaceMockRecorder {
	return m.recorder
}

// ValidateUserLoginReq mocks base method.
func (m *MockUserReqValidatorInterface) ValidateUserLoginReq(ctx *gin.Context) (requests.UserLoginReq, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUserLoginReq", ctx)
	ret0, _ := ret[0].(requests.UserLoginReq)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateUserLoginReq indicates an expected call of ValidateUserLoginReq.
func (mr *MockUserReqValidatorInterfaceMockRecorder) ValidateUserLoginReq(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUserLoginReq", reflect.TypeOf((*MockUserReqValidatorInterface)(nil).ValidateUserLoginReq), ctx)
}
